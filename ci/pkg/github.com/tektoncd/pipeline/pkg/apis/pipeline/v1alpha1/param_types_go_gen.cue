// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/tektoncd/pipeline/pkg/apis/pipeline/v1alpha1

package v1alpha1

// ParamSpec defines arbitrary parameters needed beyond typed inputs (such as
// resources). Parameter values are provided by users as inputs on a TaskRun
// or PipelineRun.
ParamSpec :: {
	// Name declares the name by which a parameter is referenced.
	name: string @go(Name)

	// Type is the user-specified type of the parameter. The possible types
	// are currently "string" and "array", and "string" is the default.
	// +optional
	type?: ParamType @go(Type)

	// Description is a user-facing description of the parameter that may be
	// used to populate a UI.
	// +optional
	description?: string @go(Description)

	// Default is the value a parameter takes if no input value is supplied. If
	// default is set, a Task may be executed without a supplied value for the
	// parameter.
	// +optional
	default?: null | ArrayOrString @go(Default,*ArrayOrString)
}

// ResourceParam declares a string value to use for the parameter called Name, and is used in
// the specific context of PipelineResources.
ResourceParam :: {
	name:  string @go(Name)
	value: string @go(Value)
}

// Param declares an ArrayOrString to use for the parameter called name.
Param :: {
	name:  string        @go(Name)
	value: ArrayOrString @go(Value)
}

// ParamType indicates the type of an input parameter;
// Used to distinguish between a single string and an array of strings.
ParamType :: string // enumParamType

enumParamType ::
	ParamTypeString |
	ParamTypeArray

ParamTypeString :: ParamType & "string"
ParamTypeArray ::  ParamType & "array"

// ArrayOrString is a type that can hold a single string or string array.
// Used in JSON unmarshalling so that a single JSON field can accept
// either an individual string or an array of strings.
ArrayOrString :: {
	Type:      ParamType
	StringVal: string
	ArrayVal: [...string] @go(,[]string)
}
